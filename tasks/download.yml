---

- name: get latest release
  delegate_to: localhost
  become: false
  run_once: true
  when:
    - nextcloud_version == "latest"
  block:
    - name: get latest release
      bodsch.scm.github_latest:
        project: nextcloud
        repository: nextcloud
        user: "{{ lookup('env', 'GH_USER') | default(omit) }}"
        password: "{{ lookup('env', 'GH_TOKEN') | default(omit) }}"
      register: _latest_release

    - name: set nextcloud version
      ansible.builtin.set_fact:
        nextcloud_version: "{{ _latest_release.latest_release }}"

- name: define download information
  ansible.builtin.set_fact:
    nextcloud_release: "{{ nextcloud_defaults_release | combine(nextcloud_release, recursive=True) }}"

- name: define delegate instance for download handling
  ansible.builtin.set_fact:
    nextcloud_delegate_to: "{{ ansible_host }}"
    nextcloud_local_tmp_directory: "{{
        lookup('env', 'CUSTOM_LOCAL_TMP_DIRECTORY') |
        default('/var/cache/ansible/nextcloud', true) }}/{{ nextcloud_version }}"
  when:
    - nextcloud_direct_download

- name: create download directory
  become: false
  delegate_to: "{{ nextcloud_delegate_to }}"
  run_once: "{{ 'false' if nextcloud_direct_download else 'true' }}"
  ansible.builtin.file:
    path: "{{ nextcloud_local_tmp_directory }}"
    state: directory
    mode: 0750

- name: detect the downloaded nextcloud archive
  become: false
  delegate_to: "{{ nextcloud_delegate_to }}"
  run_once: "{{ 'false' if nextcloud_direct_download else 'true' }}"
  ansible.builtin.stat:
    path: "{{ nextcloud_local_tmp_directory }}/{{ nextcloud_release.file }}"
  register: stat_nextcloud_archive


- name: download
  when:
    - stat_nextcloud_archive.stat is defined
    - not stat_nextcloud_archive.stat.exists | default('false')
  block:
    # - name: checksum
    #   become: false
    #   delegate_to: localhost
    #   run_once: true
    #   block:
    #     - name: get checksum list
    #       bodsch.scm.github_checksum:
    #         project: nextcloud
    #         repository: nextcloud
    #         checksum_file: "{{ nextcloud_release.checksum }}"
    #         user: "{{ lookup('env', 'GH_USER') | default(omit) }}"
    #         password: "{{ lookup('env', 'GH_TOKEN') | default(omit) }}"
    #         architecture: "{{ ansible_architecture }}"
    #         system: "{{ ansible_facts.system }}"
    #         version: "{{ nextcloud_version }}"
    #       register: _latest_checksum
    #
    #     - name: define checksum for {{ system_architecture }} architecture
    #       ansible.builtin.set_fact:
    #         __nextcloud_checksum: "sha256:{{ _latest_checksum.checksum }}"
    #       when:
    #         - _latest_checksum.rc == 0
    #         - _latest_checksum.checksum is defined
    #         - _latest_checksum.checksum | string | length > 0

    - name: download nextcloud binary archive
      become: false
      delegate_to: "{{ nextcloud_delegate_to }}"
      run_once: "{{ 'false' if nextcloud_direct_download else 'true' }}"
      ansible.builtin.get_url:
        url: "{{ nextcloud_release.download_url }}/{{ nextcloud_release.file }}"
        dest: "{{ nextcloud_local_tmp_directory }}/{{ nextcloud_release.file }}"
        checksum: "{{ __nextcloud_checksum | default(omit) }}"
        mode: 0660
      register: _download_archive
      until: _download_archive is succeeded
      retries: 5
      delay: 2
      check_mode: false

  rescue:
    - name: delete download directory
      become: false
      delegate_to: "{{ nextcloud_delegate_to }}"
      run_once: "{{ 'false' if nextcloud_direct_download else 'true' }}"
      ansible.builtin.file:
        path: "{{ nextcloud_local_tmp_directory }}"
        state: absent

    - name: exit with fail
      ansible.builtin.fail:
        msg: A serious error occurred when downloading the archive.

...
