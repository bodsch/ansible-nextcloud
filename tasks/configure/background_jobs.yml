---

- name: remove background cron job
  when:
    - not nextcloud_background_jobs.enabled | default('false') | bool
    - nextcloud_background_jobs.type | default('webcron') | string | lower in ["cron", "ajax", "webcron", "systemd"]
  block:
    - name: configure nextcloud background jobs
      nextcloud_occ:
        command: "background:webcron"
        owner: "{{ nextcloud_owner }}"
        working_dir: "{{ nextcloud_install_base_directory }}/server"
      register: nc_status

    - name: remove cron jobs
      when:
        - not nextcloud_background_jobs.type | string == "cron"
      block:
        - name: remove cron job for background jobs
          ansible.builtin.cron:
            name: nextcloud background jobs
            job: "[ -e {{ nextcloud_install_base_directory }}/server/cron.php ] && php -f {{ nextcloud_install_base_directory }}/server/cron.php 2> /dev/null"
            user: "{{ nextcloud_owner }}"
            cron_file: nextcloud-background-jobs
            state: absent
          failed_when: false

        - name: disable systemd timer
          ansible.builtin.service:
            name: nextcloud-cron.timer
            enabled: false
            state: stopped
          failed_when: false

- name: create background cron job
  when:
    - nextcloud_background_jobs.enabled | default('false') | bool
    - nextcloud_background_jobs.type | default('webcron') |  string | lower in ["cron", "ajax", "webcron", "systemd"]
  block:
    - name: configure nextcloud background jobs
      nextcloud_occ:
        command: "background:{{ 'cron' if nextcloud_background_jobs.type == 'systemd' else nextcloud_background_jobs.type }}"
        owner: "{{ nextcloud_owner }}"
        working_dir: "{{ nextcloud_install_base_directory }}/server"
      register: nc_status

    - name: remove cron file
      when:
        - not nextcloud_background_jobs.type | string == "cron"
      block:

        # - name: detect old cron file
        #   ansible.builtin.stat:
        #     path: "/etc/cron.d/nextcloud-background-jobs"
        #     get_checksum: false
        #     get_attributes: false
        #   register: nextcloud_background_cron

        - name: remove cron job for background jobs
          ansible.builtin.cron:
            name: nextcloud background jobs
            job: "[ -e {{ nextcloud_install_base_directory }}/server/cron.php ] && php -f {{ nextcloud_install_base_directory }}/server/cron.php 2> /dev/null"
            user: "{{ nextcloud_owner }}"
            cron_file: nextcloud-background-jobs
            state: absent
          failed_when: false
          # when:
          #   - nextcloud_background_cron.stat is defined
          #   - nextcloud_background_cron.stat.exists | default('false')

    - name: remove system unit file
      when:
        - not nextcloud_background_jobs.type | string == "systemd"
      block:

        # - name: detect old systemd timer file
        #   ansible.builtin.stat:
        #     path: "{{ systemd_lib_directory }}/nextcloud-cron.timer"
        #     get_checksum: false
        #     get_attributes: false
        #   register: nextcloud_background_timer

        - name: disable nextcloud background timer
          ansible.builtin.service:
            name: nextcloud-cron.timer
            enabled: false
            state: stopped
          failed_when: false

    - name: cron daemon
      when:
        - nextcloud_background_jobs.state | default('disabled') == "enabled"
        - nextcloud_background_jobs.daemon | default('') | string | length > 0
        - nextcloud_background_jobs.type is defined
        - nextcloud_background_jobs.type | string == "cron"
      block:

        - name: ensure cron daemon is installed
          ansible.builtin.package:
            name: "{{ nextcloud_background_jobs.daemon }}"
            state: present

        - name: create cron job for background jobs
          ansible.builtin.cron:
            name: nextcloud background jobs
            job: "[ -e {{ nextcloud_install_base_directory }}/server/cron.php ] && php -f {{ nextcloud_install_base_directory }}/server/cron.php 2> /dev/null"
            minute: "{{ nextcloud_background_jobs.cron.minute | default('*/5') }}"
            hour: "{{ nextcloud_background_jobs.cron.hour | default('*') }}"
            weekday: "{{ nextcloud_background_jobs.cron.weekday | default('*') }}"
            user: "{{ nextcloud_owner }}"
            cron_file: nextcloud-background-jobs
            state: present

    - name: systemd unit
      when:
        - nextcloud_background_jobs.state | default('disabled') == "enabled"
        - nextcloud_background_jobs.type is defined
        - nextcloud_background_jobs.type | string == "systemd"
      block:

        - name: create systemd unit file
          ansible.builtin.template:
            src: etc/init/systemd/nextcloud-cron.service.j2
            dest: "{{ systemd_lib_directory }}/nextcloud-cron.service"
            mode: "0644"
          notify:
            - daemon reload

        - name: create systemd timer file
          ansible.builtin.template:
            src: etc/init/systemd/nextcloud-cron.timer.j2
            dest: "{{ systemd_lib_directory }}/nextcloud-cron.timer"
            mode: "0644"
          notify:
            - daemon reload

        - name: enable nextcloud background timer
          ansible.builtin.service:
            name: nextcloud-cron.timer
            enabled: true
            state: started

...
